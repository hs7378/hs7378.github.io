[{"content":"\n\n## 建站程序\n\n之前一直是使用WordPress，大家都说好，我用了十来年，完全没有感觉到好。先吐槽一下，WordPress会被黑、搭建要求php+mysql、备份需要备份网站数据和数据库、能找到的免费主题丑......\n\n个人觉得本地生成静态网站再发布才是王道，目前支持生成静态html的程序很多，可以部署在github、Netlify、heroku、zeit.co、OpenShift免费平台，或者各种云的oss上，如果还不够再加个cdn，小流量的基本上没啥成本。\n之前试用了hexo，大家也是吹的很牛逼，反正我研究了几天还是觉得很复杂，无意中遇到了[Ink](https://github.com/InkProject/ink) （官方域名不知道是被卖了还是因为啥，这里给github地址），这个是基于go做的，看着好久没更新了，但是目前功能够用，最关键的是简单，看文档半小时就基本可以完成部署了，hexo看半小时就能把东西部署完成是不可能的。\n\n\n\n## 网站架构 \n\r\n- 网站静态文件放在Github仓库，前端使用Netlify。\n\n\r\n- 为什么不直接用github pages？ 不支持IPv6，屏蔽部分搜索引擎\r\n\r\n这一次迁移无意中发现了个黑科技，网站数据部署在类似Github的Git仓库上，网站可以托管在其他地方，当数据有更新时，Git仓库可以通过webhook通知第三方更新数据。这个基本上就比较完美了，因为通过ftp或者一些服务器提供的工具上传是很不方便的，大量小文件通过ftp传送到国外服务器是不太可能传输成功的。\n\nGitHub使用的是BGP anycast技术做的CDN，这种技术比通过智能DNS实现分流要好的多（例如终端配置8.8.8.8的DNS，智能解析是没法判断终端的运营商的） 但是这个也是看运营商脸色吃饭的，在国内用CDN的目的一个是加速，还有一个就是省钱（四五线小城市的带宽白菜价，在当地访问也没啥质量问题）。国内BGP带宽是天价，大的互联网公司只有最核心的业务才使用。Netlify是使用的智能DNS来实现的CDN，不过支持IPv6。\nGitHub pages实际上就是用4个地址在全球节点上通过BGP广播 185.199.111.153  185.199.109.153  185.199.110.153  185.199.108.153 \n","cover":"/images/webhooks.jpg","link":"move.html","preview":"\u003cp\u003e一直比较厌恶复杂的东西，也难以理解一个简单的博客为什么要那么复杂。这次一次性吧这些问题搞定\u003c/p\u003e\n","title":"博客迁移2019"},{"content":"\n\n## 1.在ACS上下载文件\nSystem Administration \u003e Downloads \u003e User Change Password \u003e UCP web application 下载后\n![文件目录](/images/1/acs2.png)\n## 2.开启UCP ACS web interface \n```\nacs5-8/admin# acs config-web-interface ucp enable                \nacs5-8/admin# show acs-config-web-interface \nmigration interface is disabled\nucp interface is enabled\nview interface is disabled\n```\n## 3.搭建jsp环境 ##\n搭建jsp环境，并将文件拷入网站根目录，必须是根目录，子目录就会报错。\nUCP需要一个jsp的web环境，一般用Tomcat即可，以下是简单的搭建过程:\n\n需要下载JDK和Tomcat。先安装JDK，添加系统环境变量\n 名称：JAVA_HOME  变量值：安装的路径（例如C:\\Program Files\\Java\\jdk1.8.0_151）\n再添加名称：CLASS_PATH  变量值：.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar     注意符号\n再再PATH变量里面增加  ;%JAVA_HOME%\\bin;\nTomcat安装后也需要添加环境变量 变量名：CATALINA_HOME    变量值：安装的路径\nhttp://www.ciscopress.com/articles/article.asp?p=1678922\n","cover":"/images/1/acs1.png","link":"acs-ucp.html","preview":"\u003cp\u003e目标就是搭建出一个环境可以让ACS用户自助修改自己的密码\u003c/p\u003e\n","title":"ACS UCP（User Change Password）自主修改账号密码页面"},{"content":"\n查找了很多资料，HTTP首部的自定义字段，有些虽然不是标准，但是事实已经是标准。\n\nHTTP 消息头用来准确描述正在获取的资源、服务器或者客户端的行为。 自定义专用消息头可通过’X-‘ 前缀来添加; 其他的消息头在 IANA 注册表 中列出, 其原始内容在 RFC 4229中定义. IANA 同时还维护了被提议的新HTTP 消息头注册表.  来源自https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers 的解释：\n## 1.在CDN里面使用 ##\n确认自己的内容是不是被CDN缓存了、在什么节点缓存、在内存还是硬盘缓存。\n- 腾讯的 www.qq.com\n```\nCache-Control: max-age=60\nConnection: keep-alive\nContent-Encoding: gzip\nContent-Type: text/html; charset=GB2312\nDate: Tue, 10 Oct 2017 06:41:32 GMT\nExpires: Tue, 10 Oct 2017 06:42:32 GMT\nServer: squid/3.5.20\nTransfer-Encoding: chunked\nVary: Accept-Encoding\nVary: Accept-Encoding\nVary: Accept-Encoding\nX-Cache: HIT from shenzhen.qq.com #自定义字段，给CDN使用\n```\n\n- 腾讯云CDN的字段和他们自有用的产品貌似不一样\r\n\r\n```\nX-Cache-Lookup: Hit From MemCache #表示命中 CDN 节点的内存。\nX-Cache-Lookup: Hit From Disktank #表示命中 CDN 节点的磁盘。\nX-Cache-Lookup: Hit From Upstream #表示没有命中 CDN。\n```\n\n- 淘宝的www.taobao.com的描述和阿里云CDN的产品描述是一样的\r\n\r\n```\nAge: 761\nCache-Control: max-age=0, s-maxage=3600\nConnection: keep-alive\nContent-Encoding: gzip\nContent-Type: text/html; charset=utf-8\nDate: Tue, 10 Oct 2017 06:48:58 GMT\nEagleId: 7909d4e615076181383338721e\nServer: Tengine\nStrict-Transport-Security: max-age=31536000\nTiming-Allow-Origin: *\nTransfer-Encoding: chunked\nVary: Accept-Encoding\nVary: Ali-Detector-Type, X-CIP-PT\nVia: cache35.l2cn62[110,200-0,C], cache36.l2cn62[106,0], cache4.cn225[0,200-0,H], cache4.cn225[1,0]\nX-Cache: HIT TCP_MEM_HIT dirn:-2:-2 mlen:-1 #自定义字段，给CND使用\nX-Swift-CacheTime: 3600\nX-Swift-SaveTime: Tue, 10 Oct 2017 06:36:17 GMT\n```\n\n## 2.在防盗链里面使用 ##\n- youtube防盗链\r\n\r\n```\nalt-svc: quic=”:443″; ma=2592000; v=”39,38,37,35″\ncache-control: no-cache\ncontent-encoding: br\ncontent-type: text/html; charset=utf-8\ndate: Tue, 10 Oct 2017 06:39:47 GMT\nexpires: Tue, 27 Apr 1971 19:44:06 EST\np3p: CP=”This is not a P3P policy! See http://support.google.com/accounts/answer/151657?hl=en for more info.”\nserver: YouTube Frontend Proxy\nset-cookie: YSC=EToAyfxXAbk; path=/; domain=.youtube.com; httponly\nstatus: 200\nstrict-transport-security: max-age=31536000\nx-content-type-options: nosniff\nx-frame-options: SAMEORIGIN\nx-xss-protection: 1; mode=block; report=https://www.google.com/appserve/security-bugs/log/youtube\n```\n\n**X-Frame-Options 有三个值:**\n\n- **DENY**\r\n 表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。\n- **SAMEORIGIN**\r\n表示该页面可以在相同域名页面的 frame 中展示。\n- **ALLOW-FROM uri**\r\n表示该页面可以在指定来源的 frame 中展示。\n换一句话说，如果设置为 DENY，不光在别人的网站 frame 嵌入时会无法加载，在同域名页面中同样会无法加载。另一方面，如果设置为SAMEORIGIN，那么页面就可以在同域名页面的 frame 中嵌套。\n\n## 3.在各种正向、反向代理，负载均衡设备，CDN中使用的Forwarded 首部 ##\nForwarded 首部中包含了代理服务器面向客户端的一端，由于代理服务器的在请求路径中的介入而被修改或丢失的信息。但是目前事实上的标准的首部是 X-Forwarded-For 、 X-Forwarded-Host 以及X-Forwarded-Proto\n### X-Forwarded-For (XFF) : ###\n在客户端访问服务器的过程中如果需要经过HTTP代理或者负载均衡服务器，可以被用来获取最初发起请求的客户端的IP地址，这个消息首部成为事实上的标准。在消息流从客户端流向服务器的过程中被拦截的情况下，服务器端的访问日志只能记录代理服务器或者负载均衡服务器的IP地址。获得最初发起请求的客户端的IP地址，一般在负载均衡设备和CDN上都会添加或修改这个首部\n### X-Forwarded-Proto (XFP) : ###\n用来确定客户端与代理服务器或者负载均衡服务器之间的连接所采用的传输协议（HTTP 或 HTTPS）。在服务器的访问日志中记录的是负载均衡服务器与服务器之间的连接所使用的传输协议，而非客户端与负载均衡服务器之间所使用的协议。为了确定客户端与负载均衡服务器之间所使用的协议， X-Forwarded-For 就派上了用场。\n### X-Forwarded-Host (XFH) : ###\n用来确定客户端发起的请求中使用  Host  指定的初始域名。 反向代理（如负载均衡服务器、CDN等）的域名或端口号可能会与处理请求的源头服务器有所不同，在这种情况下，X-Forwarded-Host 可以用来确定哪一个域名是最初被用来访问的。这个消息首部会被用来进行调试和统计，以及生成基于位置的定制化内容，按照设计的目的，它会暴露一定的隐私和敏感信息，比如客户端的IP地址。所以在应用此消息首部的时候，需要将用户的隐私问题考虑在内。一般CDN回源和实际使用的域名不一样。\n","cover":"","link":"http-head.html","preview":"\u003cp\u003eHTTP首部的自定义字段，查找了很多资料，有些虽然不是标准，但是事实已经是标准。\u003c/p\u003e\n","title":"HTTP首部自定义字段"},{"content":"\n各种查资料，研究了一整天，得出了以下结论：\n\r\n- Unicode 只是一个字符集，是一个囊括了世界上所有字符的字符集。\r\n- UTF-8、UTF-16是对Unicode的两种变长编码实现方式\r\n- Windows下所谓的Unicode编码实际上是UTF-16 LE（记事本另存为的编码选择那里误导了很多人）。\r\n- UTF-16 从来都是变长编码，但是UTF-16在绝大多数情况下都是定长的（因为Windows最初只支持2字节长度）\r\n- 目前大部分网站都是的编码格式都是UTF-8，过去可能为了节约带宽使用其他编码，但是目前文字内容占带宽的比例几乎可以忽略了。\r\n- python2默认编码是ASCII，python3默认是UTF-8","cover":"","link":"encode.html","preview":"\u003cp\u003e网上的各种垃圾说法满天飞，自己查找资料总结下Unicode、UTF-8这些玩意的区别。\u003c/p\u003e\n","title":"编码问题"},{"content":"\n\n之前学习BGP的时候一直流传一个免费的查看BGP路由的服务器，但是单个运营商看不出整体，也看不到具体IP的流量走向，偶然发现有这个好东西，包括了大部分主流运营商。 直接telnet即可  原网站地址http://routeserver.org/    直接点击即可telnet上去查看\n\n![全球节点](/images/1/tier1-router.png)\n\n","cover":"/images/1/Tier1ISPclub.png","link":"tier1-club.html","preview":"\u003cp\u003e之前学习BGP的时候一直流传一个免费的查看BGP路由的服务器，但是单个运营商看不出整体，也看不到具体IP的流量走向，偶然发现有这个好东西，包括了大部分主流运营商。 直接telnet即可  原网站地址\u003ca href=\"http://routeserver.org/\"\u003ehttp://routeserver.org/\u003c/a\u003e    直接点击即可telnet上去查看\u003c/p\u003e\n","title":"查看世界各地国际互联网骨干BGP路由，包括Tier 1和Tier 2 ISP"},{"content":"\n\n虽然不怎么认同BBR这个算法，但是在出口带宽大，到大陆连接质量差的美国机房开启这个玩意就相当于是量身定做的一个协议了\n\n之前在hostus.us买了个kvm的，CN2半程直连，回程走chinanet直连，去程走CN2，质量非常好，上传可以跑满，但是下行就不行了，最开始开启了锐速，后来觉得这个软件不安全，转移至BBR这种开源技术。\n\n需要升级4.9的kernel才行，升级不用想那么多，对一般的应用不会有什么影响，我这边升级完成后ss和anyconnect都正常。\n\n第一步导入ELRepo GPG key\n\n    rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n安装 ELRepo，我这里是CentOS 6,这个经常有更新，可以去官网去看\n\n    rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm\n如果是7就安装这个\n\n    rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\n直接升级\n\n    yum --enablerepo=elrepo-kernel install kernel-ml\n修改一下grub配置，默认没有把4.9设置为默认启动  吧default改为4.9的\n\n    vim /boot/grub/grub.conf\n重启之后可以看到内核已经修改为4.9\n\n```\n[root@cn ~]# uname -r\n4.9.9-1.el6.elrepo.x86_64\n开启TCP BBR\n\n[root@cn ~]# echo \"net.core.default_qdisc=fq\" \u003e\u003e /etc/sysctl.conf\n[root@cn ~]#  echo \"net.ipv4.tcp_congestion_control=bbr\" \u003e\u003e /etc/sysctl.conf\n[root@cn ~]#  sysctl -p\nnet.ipv4.ip_forward = 1\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.conf.default.accept_source_route = 0\nkernel.sysrq = 0\nkernel.core_uses_pid = 1\nnet.ipv4.tcp_syncookies = 1\nnet.bridge.bridge-nf-call-ip6tables = 0\nnet.bridge.bridge-nf-call-iptables = 0\nnet.bridge.bridge-nf-call-arptables = 0\nkernel.msgmnb = 65536\nkernel.msgmax = 65536\nkernel.shmmax = 68719476736\nkernel.shmall = 4294967296\nnet.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr\n```\n\n确认是否正常\n\n```\n[root@cn ~]# sysctl net.ipv4.tcp_available_congestion_control\nnet.ipv4.tcp_available_congestion_control = bbr cubic reno\n[root@cn ~]# sysctl -n net.ipv4.tcp_congestion_control\nbbr\n[root@cn ~]# lsmod | grep bbr\ntcp_bbr                16384  6\n```\n","cover":"/images/1/BBR.png","link":"bbr.html","preview":"\u003cp\u003e虽然不怎么认同BBR这个算法，但是在出口带宽大，到大陆连接质量差的美国机房开启这个玩意就相当于是量身定做的一个协议了\u003c/p\u003e\n","title":"Centos 6升级kernel至4.9 体验google黑科技TCP BBR算法"},{"content":"\n\n网上抄来抄去 垃圾信息太多 本来很简单的事情 不知道为什么都说的那么复杂  官网也给一堆垃圾信息\n之前放在阿里云，这篇文章竟然被屏蔽了。\n\n```\n cd /etc/yum.repos.d/\n wget https://copr.fedorainfracloud.org/coprs/librehat/shadowsocks/repo/epel-7/librehat-shadowsocks-epel-7.repo\n yum install shadowsocks-libev\n```\n\n编辑配置文件\n\n```\n{   \n \"server\":[\"[::0]\",\"0.0.0.0\"],#容许IPv6和4都访问  \n  \"server_port\":8080, \n   \"local_port\":1080, \n   \"password\":\"xxx\",  \n  \"timeout\":60,  \n  \"method\":\"aes-128-cfb\"  #加密算法自己选}\n```\n\n开启服务\n\n     /etc/init.d/shadowsocks-libev start\n查看状态\n\n    /etc/init.d/shadowsocks-libev status\n","cover":"","link":"shadowsocks-libev.html","preview":"\u003cp\u003e网上抄来抄去 垃圾信息太多 本来很简单的事情 不知道为什么都说的那么复杂，官网也给一堆垃圾信息，之前放在阿里云，竟然这个页面被屏蔽了\u003c/p\u003e\n","title":"shadowsocks-libev安装使用 简单明了"},{"content":"\n\n ## 确保NTP、时区、DNS、域名的正确性 ##\n\n```\nclock timezone Asia/Chongqing\n\nip domain-name oa.test.local\n\nip name-server 10.0.0.1\n\nntp server 10.0.0.1 \n```\n\n\n如果AD服务器oa.test.local是分布式的，解析出来的地址不一定是自己想要的服务器，所以要指定主机名，类似于S001KK016.oa.test.local地址，但是ACS5.3存在bug，不能直接使用S001KK016.oa.test.local来进行同步域，只能输入类似oa.test.local，\n\n所以需要在命令行acs-config下进行配置， 登陆使用web界面密码 \n\n```\nacs-config\nad-agent-configuration dns.dc.oa.test.local S001KK016.oa.test.local \n```\n\nshow ad-agent-configuration oa.test.local进行查看\n","cover":"","link":"acs-ad.html","preview":"\u003cp\u003eACS 5.X加微软AD域失败问题解决方法\u003c/p\u003e\n","title":"ACS 5.X加微软AD域失败问题解决方法"},{"content":"\n\nRadius报文中，code＝1是认证请求报文，code＝2和code＝3分别是认证通过和认证失败报文，这三种报文只在用户上线时产生。在用户上网的漫长过程中，是依靠code＝4报文来维系计费和用户在线信息。\n\n 关于radius里面code＝4和code＝5的报文：\n     code＝4：计费请求，由客户端发出（一般是配置了radius的交换机）\n     code＝5：计费回应。由radius服务器发出\n \nAttribute-Value（AV） Pairs 属性和值的pairs\n \nIETF属性很多是可以直接使用的 像使用802.1X做vlan授权这些，这些都是只有一个ID的\n \nRadius Attribute Type 26 表示厂商私有属性 是专门给厂商自己定义的\n下面的value 9表示cisco type 1表示Cisco-AVPair\n下面的value 2636就是juniper的 311是微软的 下面的可以是厂商自己定义的\n \n例如：\n026/009/001就是代表cisco-av-pair\n026/009/101就是代表cisco-h323-credit-amount","cover":"","link":"raduis.html","preview":"\u003cp\u003eRadius报文中，code＝1是认证请求报文，code＝2和code＝3分别是认证通过和认证失败报文，这三种报文只在用户上线时产生。在用户上网的漫长过程中，是依靠code＝4报文来维系计费和用户在线信息。\u003c/p\u003e\n","title":"radius 厂商私有属性"},{"content":"\n\n这是迁移博客发现的旧文，当时免费WiFi还比较少，连的是电信的收费WIFI\n\n一晃6年过去了，IPv6普及还是遥遥无期，这次看政府强力推广效果怎么样了。\n\n![地址](/images/1/IPv6-1.png)\n![ping goolge](/images/1/IPv6-2.png)\n","cover":"","link":"ipv6.html","preview":"\u003cp\u003e这是迁移博客发现的旧文，当时免费WiFi还比较少，连的是电信的收费WIFI\u003c/p\u003e\n","title":"电信WI-FI支持ipv6了"},{"content":"\n\n\n使用windows server 2003做CA时，win7高级证书申请时一直提示\"正在下载activex控件\"\n\n为什么会出现这个问题\n\n来自于微软官方的解释 \n\n\u003e Windows Server 2003 证书服务 Web 注册功能依赖于一个名为 Xenroll 的 ActiveX 控件。在 Microsoft Windows 2000 和更高版本的 Windows 中，则此 ActiveX 控件不可用。但是，在 Windows Vista 和 Windows Server 2008 中，Xenroll 已被否决。示例证书注册 Web 页所包含的原始发行版本的 Microsoft Windows Server 2003 中，使用 Windows 2003 Service Pack 1 （SP1），并与 Windows 2003 Service Pack 2 (SP2) 不旨在处理 Windows Vista 和 Windows Server 2008 如何执行基于 Web 的证书注册操作的更改。\n\n网上提出了很多解决办法，例如重新下载Xenroll文件等等。\n但是这些在实际使用中有意义么？难道要每个用户去下载然后再注册dll然后再改注册表？\n\n终极解决办法还是来自于微软的，给windows server 2003打补丁即可\n\n  \n\n打完补丁后需要开启https\n\nWindows Server 2003 更新程序 (KB922706)\n\n- [Windows Server 2003 更新程序 (KB922706)](https://www.microsoft.com/zh-cn/download/details.aspx?id=4758)","cover":"","link":"win2003-ca.html","preview":"\u003cp\u003e使用windows server 2003做CA时，win7高级证书申请时一直提示\u0026rdquo;正在下载activex控件\u0026rdquo;\u003c/p\u003e\n","title":"Windows Server 2003做CA颁发证书问题"},{"content":"\n\n\n 用了下坚果铺子 很适合技术宅\n\n分享下邀请码\n\nhttps://jianguoyun.com/d/ref/2qBhQJLdP2OcVyVry9Raqw\n\n\n\r\n\u003e \n这是2012年的一篇旧文，分享坚果云的邀请码。用心做事的都会活的长久，当时再牛逼的网盘，TB级别又怎么样？浮躁不切实际最后还不是都死了","cover":"","link":"jianguoyun.html","preview":"\u003cp\u003e这是2012年的一篇旧文，分享坚果云的邀请码。用心做事的都会活的长久，当时再牛逼的网盘，TB级别又怎么样？浮躁不切实际最后还不是都死了\u003c/p\u003e\n","title":"坚果铺子邀请码"},{"content":"\n\n\n一直想研究下活动目录\n\n但是没什么好的资料\n\n书上都是写的叫你怎么解剖鱼 很详细 但是就是不告诉你鱼是用来吃\n\n也不教你怎么打渔 用这个来形容现在的培训机构 或者是什么教材是最形象不过的了\n\n官方有视频下载 蛮专业的\n\nhttp://technet.microsoft.com/zh-cn/dd547445.aspx","cover":"","link":"share.html","preview":"\u003cp\u003e书上都是写的叫你怎么解剖鱼 很详细 但是就是不告诉你鱼是用来吃\u003c/p\u003e\n","title":"好东西分享一把"},{"content":"\n\n![这个老师不怎么熟](/images/1/quanminglinux-1.jpg)\n\n\n**这本牛逼的书是啥呢？**\n\n![大作](/images/1/quanminglinux-2.jpg)","cover":"","link":"st-linux.html","preview":"\u003cp\u003e可惜不是你\u003c/p\u003e\n","title":"现在是全民学习linux啊"},{"content":"\n\n\u003e 看看之前的记录还是蛮装逼的\n\n最近都没有更新了，一直在准备CCIE 考试，终于是过了\n\n其实我走进考场的时候就感觉自己过了，但是等成绩的过程还是不淡定的\n\n![](/images/1/CCIE-PASS.png)","cover":"","link":"ccie-pass.html","preview":"\u003cp\u003e看看过去装逼\u003c/p\u003e\n","title":"CCIE，没有悬念的pass"},{"content":"\n\n\n\r\n\u003e We are deeply saddened to announce that Steve Jobs passed away today。\nSteve’s brilliance, passion and energy were the source of countless innovations that enrich and improve all of our lives. The world is immeasurably better because of Steve。\n\n\u003e His greatest love was for his wife, Laurene, and his family. Our hearts go out to them and to all who were touched by his extraordinary gifts。","cover":"","link":"qiaobushi.html","preview":"\u003cp\u003e忘了当时什么心情，乔布斯\u003c/p\u003e\n","title":"留下"},{"content":"\n\n\nMPF中应用层协议的检测\n在ASA中默认有\npolicy-map type inspect dns preset_dns_map\n parameters\n  message-length maximum 512\npolicy-map global_policy\n class inspection_default\n  inspect dns preset_dns_map\n  inspect ftp\n  inspect h323 h225\n  inspect h323 ras\n  inspect rsh\n  inspect rtsp\n  inspect esmtp\n  inspect sqlnet\n  inspect skinny \n  inspect sunrpc\n  inspect xdmcp\n  inspect sip \n  inspect netbios\n  inspect tftp\nservice-policy global_policy global\n\n先定义一个七层的policy-map\npolicy-map type inspect dns preset_dns_map\n parameters\n  message-length maximum 512\n然后再在普通policy-map中调用\npolicy-map global_policy\n class inspection_default\n  inspect dns preset_dns_map\n\n示例1\n需求：\nDNS控制：\n1.DNS id随机扰乱\n2.inspect message format\nHTTP控制：\n1.HTTP request header gt 4096–drop-connection\n\n解法：\nDNS控制\n如上所示，在show run中有这样的显示\npolicy-map type inspect dns preset_dns_map\n parameters\n  message-length maximum 512\n直接进去修改dns的参数即可\nASA(config)# policy-map type inspect dns preset_dns_map\nASA(config-pmap)# parameters\nASA(config-pmap-p)# id-randomization //DNS id随机扰乱\nASA(config-pmap-p)# protocol-enforcement //inspect message format，这个是默认参数，所以在show run中是不显示的\n系统默认就有\n policy-map global_policy\n class inspection_default\n  inspect dns preset_dns_map\n所以无需自己在普通policy-map调用\n\nhttp控制\nASA(config)# policy-map type inspect http chttp\nASA(config-pmap)# match request header  length gt 4096\nASA(config-pmap-c)# drop-connection\n默认的没有在普通policy-map调用，需要自己手动调用\nASA(config)# policy-map global_policy\nASA(config-pmap)#class inspection_default\nASA(config-pmap-c)# inspect http chttp\n\n示例2\n监控ESMTP包头大于4096的drop connection 运行在global_policy\nASA(config)# policy-map type inspect esmtp cesmtp\nASA(config-pmap)# match header length gt 4096\nASA(config-pmap-c)# drop-connection\n再在普通policy-map中调用，注意：在global_policy中已经inspect estmp了，需要先no掉\nASA(config)#  policy-map global_policy\nASA(config-pmap)#  class inspection_default\nASA(config-pmap-c)# no inspect esmtp\nASA(config-pmap-c)# inspect esmtp cesmtp\n\nWindows Server 2003 更新程序 (KB922706)\n\n- [Windows Server 2003 更新程序 (KB922706)](https://www.microsoft.com/zh-cn/download/details.aspx?id=4758)","cover":"","link":"mpf.html","preview":"\u003cp\u003e思科ASA防火墙MPF中应用层协议的检测配置\u003c/p\u003e\n","title":"MPF中应用层协议的检测配置"}]